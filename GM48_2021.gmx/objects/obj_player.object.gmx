<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_player_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hsp = 0;
vsp = 0;
dir = 0;
player_speed = 3;

x += 16;
y += 16;

sprite_index = spr_player_down;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hsp = ((keyboard_check(vk_right) or keyboard_check(ord("D"))) - (keyboard_check(vk_left) or keyboard_check(ord("A")))) * player_speed;
vsp = ((keyboard_check(vk_down) or keyboard_check(ord("S"))) - (keyboard_check(vk_up)or keyboard_check(ord("W"))))    * player_speed;

if (hsp != 0 and vsp != 0)
{
    hsp = sign(hsp)*(player_speed / sqrt(2));
    vsp = sign(vsp)*(player_speed / sqrt(2));
}

if (hsp != 0)
{
    if (place_free(x + hsp, y))
    {
        x += hsp;
    }
    else
    {
        for(var i = 0; i &lt;= abs(hsp); i++)
        {
            if (!place_free(x + sign(hsp)*i, y))
            {
                x += sign(hsp)*(i-1);
                break;
            }
        }
    }
}

if (vsp != 0)
{
    if (place_free(x, y + vsp))
    {
        y += vsp;
    }
    else
    {
        for(var i = 0; i &lt;= abs(vsp); i++)
        {
            if (!place_free(x, y + sign(vsp)*i))
            {
                y += sign(vsp)*(i-1);
                break;
            }
        }
    }
}

if (hsp != 0 or vsp != 0)
{
    image_speed = .25;
}
else
{
    image_speed = 0;
}

if (hsp &gt; 0)
{
    sprite_index = spr_player_right;
    dir = 0;
}
else
if (hsp &lt; 0)
{
    sprite_index = spr_player_left;
    dir = 180;
}

if (vsp &lt; 0)
{
    sprite_index = spr_player_up;
    dir = 90;
}
else if (vsp &gt; 0)
{
    sprite_index = spr_player_down;
    dir = 270;
}


depth = -y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x, y, obj_boat);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
