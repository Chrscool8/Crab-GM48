<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>slide_speed = 15;

if (instance_exists(obj_player))
{
    x = obj_player.x;
    y = obj_player.y;
}

zoom = 1;
surf = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var zoom_target = 1;
if (keyboard_check(vk_control))
{
    if (ds_list_find_index(global.collected_letters, spr_sail) != -1)
    {
        zoom_target = 3.1;
    }
    else
    {
        zoom_target = 2.1;
    }
}
else if (keyboard_check(vk_shift))
{
    zoom_target = .5;
}

var focus = -1;

if (instance_exists(obj_player))
    focus = obj_player;

if (instance_exists(obj_boat))
{
    focus = obj_boat;
    //zoom_target = 2.1;
}

var x_target = x;
var y_target = y;
    
with(focus)
{
    var obj = instance_nearest(x, y, obj_pedestal);
    var dis = 300;
    if (instance_exists(obj_pedestal) and distance_to_object(obj)&lt;dis)
    {
        var dis = 1-(distance_to_object(obj)/dis);
        x_target = lerp(x, obj.x, dis);
        y_target = lerp(y, obj.y, dis);
    }
    else
    if (instance_exists(focus))
    {
        if (focus == obj_boat)
        {
            x_target = x + lengthdir_x(20*spd*other.zoom, dir);
            y_target = y + lengthdir_y(20*spd*other.zoom, dir);
        }
        else
        {
            x_target = x + lengthdir_x(10*other.zoom, dir);
            y_target = y + lengthdir_y(10*other.zoom, dir);
        }
    }
}

zoom = (zoom_target + zoom * (slide_speed*2))/(slide_speed*2+1);
zoom = clamp(zoom, .5, 3);

x = (x_target + x*(slide_speed))/(slide_speed+1);
y = (y_target + y*(slide_speed))/(slide_speed+1);
    
view_wview = 640 * zoom; // * clamp(zoom, .5, 2);
view_hview = 480 * zoom; // *clamp(zoom, .5, 2);

view_xview = x - view_wview/2;
view_yview = y - view_hview/2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(10, 10, string(fps)+" / "+string(fps_real));

for (var j = 0; j &lt; ds_list_size(global.collected_letters); j++)
{
    var sep = 1;
    if (not surface_exists(surf))
    {
        surf = surface_create(128, 128);
    }
    
    surface_set_target(surf);
    draw_clear_alpha(c_white, 0);
    var float = sin((current_time/700)-j*.5)*30;
    
    var iterations = 1;
    
    draw_sprite_ext(ds_list_find_value(global.collected_letters, j), 1, 64, 64, 1, 1, float, c_black, .8);
        
    var iterations = 1;
    for(var i = 0; i &lt; sprite_get_number(ds_list_find_value(global.collected_letters, j))*iterations; i++)
    {
        draw_sprite_ext(ds_list_find_value(global.collected_letters, j), i/iterations, 64, 64-sep*i/iterations, 1, 1, float, c_white, 1);
    }
    surface_reset_target();
        
    if (surface_exists(surf))  
        draw_surface_ext(surf, 72 * j-265, view_hport - 300, 5, 5*.8, 0, c_white, 1);    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
