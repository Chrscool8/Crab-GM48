<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pedestal</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>letter = spr_compass;
dir = 0;
sep = 1;
surf = -1;
depth = -y;

activated = false;
spin = 1;
collected = false;

was_letter = -1;

upgrade_platform = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if surface_exists(surf)
    surface_free(surf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_add(global.collected_letters, was_letter);

switch (was_letter)
{
    case spr_compass: 
        alert("You found the compass! Your location is now on the map.", room_speed*3);
    break;
    case spr_letter_C: 
        alert("You found the C!", room_speed*3);
    break;
    case spr_letter_A: 
        alert("You found the A!", room_speed*3);
    break;    
    case spr_letter_R: 
        alert("You found the R!", room_speed*3);
    break;    
    case spr_letter_B: 
        alert("You found the B!", room_speed*3);
    break;
    case spr_sail: 
        alert("You found the Sail! You can now sail faster.", room_speed*3);
    break;
    case spr_bino: 
        alert("You found the Binoculars! You can now zoom out further with Ctrl.", room_speed*3);
    break;
    case spr_map_collect: 
        alert("You found the Map! Hold the M key to view it.", room_speed*3);
    break;
    default: break;
}
 
if (upgrade_platform)
{
    upgrade_platform = false;
    ds_list_delete(global.collectables, 0);
    with(obj_pedestal)
    {
        if (upgrade_platform)
        {
            if (not ds_list_empty(global.collectables))
                letter = ds_list_find_value(global.collectables, 0);
            else
                letter = -1;
        }    
    }        
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (not surface_exists(surf))
{
    surf = surface_create(128, 128);
}

if (activated and letter != -1)
{
    draw_set_blend_mode(bm_add);
    draw_sprite_ext(spr_ped_glow, 0, x, y, image_xscale, image_yscale, image_angle, image_blend, .2 - (spin/45)*.2);    
    draw_set_blend_mode(bm_normal);    
}

draw_sprite_ext(sprite_index, 0, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);

//if keyboard_check_pressed(vk_enter)
if (!activated and instance_exists(obj_player) and distance_to_object(obj_player)&lt;50)
{
    activated = true;
    sfx_player_play(snd_activate_stone, 1, false);
    sfx_player_play(snd_womwomwom, 1, false);
}

if(letter != -1)
{    
    if(not activated)
        draw_sprite_ext(sprite_index, 1, x, y, image_xscale, image_yscale, image_angle, image_blend, (sin(current_time/2000)+1)/4+.25);
    else
        draw_sprite_ext(sprite_index, 1, x, y, image_xscale, image_yscale, image_angle, image_blend, (sin(current_time/2000)+1)/4+.25+spin/45);  
        
    dir += spin;

    surface_set_target(surf);
    draw_clear_alpha(c_white, 0);
    var float = sin(current_time/2000)*3.5;
    
    if (not activated)
        draw_sprite_ext(letter, 1, 64, 64+8-float, 1, 1, dir, c_black, .8);
        
    var iterations = 1;
    for(var i = 0; i &lt; sprite_get_number(letter)*iterations; i++)
    {
        draw_sprite_ext(letter, i/iterations, 64, 64-sep*i/iterations, 1, 1, dir, c_white, 1);
    }
    surface_reset_target();
  if(surface_exists(surf))
    draw_surface_ext(surf, x-64, y-64-9+float-spin/3, 1, .8, 0, c_white, 1);
    
    if (activated and spin &lt; 45)
    {
        spin += .15;    
        with(obj_tree_test)
        {
            if (distance_to_object(other.id) &lt; 50)
            {
                if (image_alpha &gt; .2)
                    image_alpha -= .005;
            }
        }
    }
    else if (activated and spin &gt;= 45)
    {
        was_letter = letter;
        letter = -1;
        alarm[0] = 45;
        sfx_player_play(snd_puff2, 1, false);
        sfx_player_play(snd_collect, 1, false);
        effect_create_above(ef_firework, x, y-40, 0, c_yellow);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
