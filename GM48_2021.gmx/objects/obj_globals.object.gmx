<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1215752191</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();

globalvar settings;
settings = ds_map_create();

ds_map_add(settings, "water_shader", 2);
ds_map_add(settings, "sand_shader", 2);
ds_map_add(settings, "surface_size", 1);

globalvar key_left, key_right, key_up, key_down;

var a = audio_play_sound(choose(snd_crab_chase, snd_trapped_at_ocean), 1, true);
audio_sound_gain(a, 0, 1);

alarm[0] = room_speed*4;
performance = ds_list_create();

warned_performance = false;

draw_set_font(font0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = room_speed;

ds_list_add(performance, fps);

if (not warned_performance and ds_list_size(performance)&gt;7)
{
    var avg = 0;
    for(var i = 0; i &lt; ds_list_size(performance); i++)
    {
        avg += ds_list_find_value(performance, i);
    }
    avg /= ds_list_size(performance);
    
    if (avg &lt; 54 or keyboard_check(vk_backspace))
    {
        //show_message("Check bottom left");
        alert("Bad performance? Change the graphics settings with the 1, 2, and 3 keys.", 300);
        warned_performance = true;        
    }
    
    show_debug_message(string(avg));
    ds_list_delete(performance, 0);
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_left  = keyboard_check(vk_left) or keyboard_check(ord("A"));
key_right = keyboard_check(vk_right) or keyboard_check(ord("D"));
key_up    = keyboard_check(vk_up)or keyboard_check(ord("W"));
key_down  = keyboard_check(vk_down) or keyboard_check(ord("S"));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(ord("1")))
{
    settings[? "water_shader"] = (settings[? "water_shader"]-1+3) mod 3;
    alert("Water Shader Quality: "+string(settings[? "water_shader"])+", default: 2");
}

if (keyboard_check_pressed(ord("2")))
{
    settings[? "sand_shader"] = (settings[? "sand_shader"]-1+3) mod 3;
    alert("Sand Shader Quality: "+string(settings[? "sand_shader"])+", default: 2");
}

if (keyboard_check_pressed(ord("3")))
{
    switch (settings[? "surface_size"])
    {
        case .25: 
            settings[? "surface_size"] = 1; 
        break;
        case .5: 
            settings[? "surface_size"] = .25; 
        break;
        case 1: 
            settings[? "surface_size"] = .5; 
        break;
        default:         
            settings[? "surface_size"] = 1; 
    }
    
    alert("Surface Size Mult: "+string(settings[? "surface_size"])+"x, default: 1");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
